DROP TABLE Developers;
DROP TABLE Games;
DROP TABLE Customers;

DROP TYPE purchased_game_table;
DROP TYPE purchased_game_t;

DROP TYPE dev_table;
DROP TYPE dev_id;

DROP PROCEDURE purchase_game;

CREATE TYPE dev_id AS OBJECT(id number(10))
/
CREATE TYPE dev_table AS TABLE OF dev_id
/

--Everything needed for customers
CREATE TYPE purchased_game_t AS OBJECT (
	asin CHAR(10),
	quantity INTEGER,
	cost DECIMAL(7,2),
	MEMBER FUNCTION get_devs RETURN dev_table
)
/
CREATE TYPE purchased_game_table AS TABLE OF purchased_game_t
/

CREATE TABLE Customers (
	id NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	account purchased_game_table
)
NESTED TABLE account STORE AS customer_account RETURN AS LOCATOR
/


--Everything needed for developers

CREATE TABLE Developers (
	id NUMBER(10) GENERATED AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL
)
/


--Everything needed for games

CREATE TABLE Games (
	asin CHAR(10) PRIMARY KEY,
	title VARCHAR(50) NOT NULL,
	price DECIMAL(5,2) NOT NULL,
	developers dev_table,
	CONSTRAINT price_geq_zero CHECK(price >= 0.0)
)
NESTED TABLE developers STORE AS game_devs RETURN AS LOCATOR
/

CREATE PROCEDURE purchase_game(c_id IN NUMBER, g_asin IN CHAR, g_quantity IN INTEGER) AS
	row_found INTEGER;
	g_price NUMBER; 
BEGIN
	SELECT price
		INTO g_price
		FROM games
		WHERE asin = g_asin;
	SELECT count(*)
		INTO row_found
		FROM customers
		WHERE g_asin IN (
			SELECT a.asin 
			FROM customers c, TABLE(c.account) a
			WHERE c.id = c_id);
	IF(row_found = 0) THEN
		INSERT INTO TABLE(
			SELECT c.account
			FROM customers c
			WHERE c.id = c_id
		)(asin, quantity, cost) VALUES (g_asin, g_quantity, g_price * g_quantity);
	ELSE
		UPDATE TABLE(
			SELECT c.account
			FROM customers c
			WHERE c.id = c_id
		) SET quantity = quantity + g_quantity,
			cost = cost + g_price * g_quantity
		WHERE asin = g_asin;
	END IF;
END purchase_game;
/

CREATE OR REPLACE PROCEDURE delete_dev(d_id IN NUMBER) AS
	gt games.asin%type;
	CURSOR gt_cursor IS 
		SELECT g.asin 
		FROM games g;
BEGIN
	OPEN gt_cursor;
	/* Delete dev from games */
	LOOP
		FETCH gt_cursor INTO gt;
		EXIT WHEN gt_cursor%NOTFOUND;
		DELETE FROM TABLE(
			SELECT g.developers 
				FROM games g 
				WHERE g.asin = gt
			) WHERE id = d_id;
	END LOOP;
	/* Then delete developer from the table */
	DELETE FROM developers d 
		WHERE d.id = d_id;
	CLOSE gt_cursor;
END delete_dev;
/
CREATE TYPE BODY purchased_game_t AS
	MEMBER FUNCTION get_devs RETURN dev_table IS
	ret dev_table;
	val number;
	--CURSOR cur IS SELECT d.id FROM developers d, games g WHERE SELF.asin = g.asinAND d.id IN (SELECT * FROM TABLE(g.developers));
	CURSOR cur IS SELECT id FROM games g, TABLE(g.developers) WHERE g.asin = SELF.asin;
	BEGIN
		OPEN cur;
		LOOP
			FETCH cur INTO val;
			EXIT WHEN cur%NOTFOUND;
			ret.extend;
			ret(ret.LAST) := dev_id(val);
		END LOOP;
		CLOSE cur;

		RETURN ret;
	END;
END;
/
